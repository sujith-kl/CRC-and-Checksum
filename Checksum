def ones_complement(data):
    return ''.join('1' if bit == '0' else '0' for bit in data)

def check_sum(data, block_size):
    data = data.zfill(len(data) + block_size - len(data) % block_size)
    result = data[:block_size]
    
    for i in range(block_size, len(data), block_size):
        result = bin(int(result, 2) + int(data[i:i + block_size], 2))[2:].zfill(block_size)[-block_size:]
        if len(result) > block_size:
            result = bin(int(result, 2) + 1)[2:].zfill(block_size)[-block_size:]
    
    return ones_complement(result)

def checker(sent_message, rec_message, block_size):
    return check_sum(rec_message + sent_message, block_size).count('0') == block_size


sent_message = input("Enter sent message (binary): ")
recv_message = input("Enter received message (binary): ")
block_size = int(input("Enter block size: "))
print("No Error" if checker(sent_message, recv_message, block_size) else "Error")
